services:
  api:
    image: hengsomnang/minipos-api:latest
    build:
      context: .
      dockerfile: src/MiniPOS.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=minipos;Username=postgres;Password=postgrespw
      - JwtSettings__Key=YourSuperSecretKey123456789012345678901234567890123456789
      - JwtSettings__Issuer=MiniPOSAPI
      - JwtSettings__Audience=MiniPOSAPIClient
      - JwtSettings__DurationInMinutes=60
      # - Serilog__MinimumLevel__Default=Information
      # - Serilog__MinimumLevel__Override__Microsoft=Warning
      # - Serilog__MinimumLevel__Override__System=Warning
      # - Serilog__WriteTo__0__Name=File
      # - Serilog__WriteTo__0__Args__path=/app/logs/log-.txt
      # - Serilog__WriteTo__0__Args__rollingInterval=Day
      # - Serilog__WriteTo__0__Args__outputTemplate={Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}
    ports:
      - "7001:8080"
    # volumes:
    #   - logs:/app/logs
    #   - keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  # logs:
  # keys:
